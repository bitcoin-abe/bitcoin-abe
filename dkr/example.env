#######################################################
# This is an example ENV file intended for use with Abe's docker system.
#
# It's not required to have an ENV file to use Abe's docker, but if
# you want to persistently override certain run.sh options such as
# the config file, Abe web server port, or debug logging, then
# you can copy this file to use as a base ENV file.
#
# To use it, simply place a copy of this file, or your own custom
# ENV file in the local host folder of your '/app' docker volume,
# e.g. /root/abe/.env - and it will be automatically read by run.sh
#
# Alternatively, if you don't want to / can't have the ENV file
# at the base of the /app volume, then you can also load the
# ENV file externally - by using 'docker run --env-file /some/where/.env',
# which will cause docker to read the ENV file (no ': ${}' or other
# shell-specific syntax apart from #comments allowed), and inject it
# into the general environment where run.sh is being ran.
#
# This file was originally written by Someguy123 @ Privex Inc.
# (C) 2021 Privex Inc. - https://www.privex.io
# Someguy's Fork: https://github.com/Someguy123/bitcoin-abe
#
#######################################################


# PY_EXE controls the python executable used to run Abe. Generally you don't ever need to change this.
PY_EXE=python2.7
# ABE_PORT controls the default listening port for the Abe web server
ABE_PORT=8545

####
# CONFIG_FILE controls which Abe config file will be used for both the web server + loader by default
#
# Notice how it's wrapped with ': ${}' - this is a bash/zsh syntax used to make a variable overridable
# from either the shell environment, or from an env file loaded before it (or after it, if the env file
# doesn't use ': ${}').
#
# Without wrapping variables, you won't be able to override them through docker's '--env', but for the ones
# which have a CLI argument - you can still set them using the argument (e.g. '-c FILE' for CONFIG_FILE, 
# and '-p PORT' for ABE_PORT)
# 
# NOTE: If you're loading this ENV file via 'docker run --env-file /x/.env' instead of placing it
# in your volume folder mapped to '/app' at '/app/.env' - then docker may complain about the
# bash/zsh overridable syntax, thus for --env-file you should stick to standard ABC=y syntax.
#
: ${CONFIG_FILE="/abe/dkr/default.conf"}

# DEBUG is an integer boolean var which controls debug logging in run.sh - set this to '1' to enable
# verbose debug logging, or keep it as '0' to disable debug logging.
: ${DEBUG=0}

# ABESTART_LINE is for advanced users only - it fully overrides the base command which is used
# to start both the Abe web server, and Abe block loader.
# Be warned: If you set ABESTART_LINE, you will lose the ability to specify both CONFIG_FILE
# and PY_EXE via both shell environment (--env) and CLI args ('-c FILE' + '-P EXE'),
# as ABESTART regeneration is disabled to prevent overwriting your custom ABESTART line.
# This is why we've commented it out by default, to avoid causing unexpected behaviour
# for users who aren't aware of this env var.
#
# ABESTART_LINE="${PY_EXE} -m Abe.abe --config ${CONFIG_FILE}"


